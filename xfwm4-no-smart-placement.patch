diff --git a/settings-dialogs/tweaks-settings.c b/settings-dialogs/tweaks-settings.c
index d5f711be6..e9572bca7 100644
--- a/settings-dialogs/tweaks-settings.c
+++ b/settings-dialogs/tweaks-settings.c
@@ -140,6 +140,15 @@ cb_activate_placement_mouse_radio_toggled (GtkToggleButton *toggle, XfconfChanne
     }
 }
 
+static void
+cb_activate_placement_none_radio_toggled (GtkToggleButton *toggle, XfconfChannel *channel)
+{
+    if (gtk_toggle_button_get_active (toggle))
+    {
+        xfconf_channel_set_string (channel, "/general/placement_mode", "none");
+    }
+}
+
 static void
 cb_urgent_blink_button_toggled (GtkToggleButton *toggle, GtkWidget *repeat_urgent_blink)
 {
@@ -205,6 +214,7 @@ wm_tweaks_dialog_configure_widgets (GtkBuilder *builder)
     GtkWidget *placement_ratio_scale = GTK_WIDGET (gtk_builder_get_object (builder, "placement_ratio_scale"));
     GtkWidget *placement_center_option = GTK_WIDGET (gtk_builder_get_object (builder, "placement_center_option"));
     GtkWidget *placement_mouse_option = GTK_WIDGET (gtk_builder_get_object (builder, "placement_mouse_option"));
+    GtkWidget *placement_none_option = GTK_WIDGET (gtk_builder_get_object (builder, "placement_none_option"));
 
     /* Compositing tab */
     GtkWidget *use_compositing_check = GTK_WIDGET (gtk_builder_get_object (builder, "use_compositing_check"));
@@ -260,6 +270,13 @@ wm_tweaks_dialog_configure_widgets (GtkBuilder *builder)
     {
         gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (placement_center_option), FALSE);
         gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (placement_mouse_option), TRUE);
+        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (placement_none_option), FALSE);
+    }
+    else if (!strcmp (default_placement, "none"))
+    {
+        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (placement_center_option), FALSE);
+        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (placement_mouse_option), FALSE);
+        gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (placement_none_option), TRUE);
     }
 
     /* not so easy properties */
@@ -287,6 +304,10 @@ wm_tweaks_dialog_configure_widgets (GtkBuilder *builder)
                       "toggled",
                       G_CALLBACK (cb_activate_placement_mouse_radio_toggled),
                       xfwm4_channel);
+    g_signal_connect (G_OBJECT (placement_none_option),
+                      "toggled",
+                      G_CALLBACK (cb_activate_placement_none_radio_toggled),
+                      xfwm4_channel);
     g_signal_connect (G_OBJECT (use_compositing_check),
                       "toggled",
                       G_CALLBACK (cb_use_compositing_check_button_toggled),
diff --git a/settings-dialogs/xfwm4-tweaks-dialog.glade b/settings-dialogs/xfwm4-tweaks-dialog.glade
index a9273a75e..1a4409b79 100644
--- a/settings-dialogs/xfwm4-tweaks-dialog.glade
+++ b/settings-dialogs/xfwm4-tweaks-dialog.glade
@@ -816,6 +816,23 @@ when switching via keyboard shortcuts</property>
                                 <property name="position">1</property>
                               </packing>
                             </child>
+                            <child>
+                              <object class="GtkRadioButton" id="placement_none_option">
+                                <property name="label" translatable="yes">Whe_rever</property>
+                                <property name="use_action_appearance">False</property>
+                                <property name="visible">True</property>
+                                <property name="can_focus">True</property>
+                                <property name="receives_default">False</property>
+                                <property name="use_underline">True</property>
+                                <property name="draw_indicator">True</property>
+                                <property name="group">placement_center_option</property>
+                              </object>
+                              <packing>
+                                <property name="expand">True</property>
+                                <property name="fill">True</property>
+                                <property name="position">2</property>
+                              </packing>
+                            </child>
                           </object>
                         </child>
                       </object>
diff --git a/src/placement.c b/src/placement.c
index 614f78fa8..f29b5d316 100644
--- a/src/placement.c
+++ b/src/placement.c
@@ -777,6 +777,11 @@ clientInitPosition (Client * c)
     myScreenFindMonitorAtPoint (screen_info, msx, msy, &rect);
     is_transient = clientIsTransient (c);
 
+    if (screen_info->params->placement_mode == PLACE_NONE)
+    {
+        place = FALSE;
+    }
+    else
     if (position || is_transient || (c->type & (WINDOW_TYPE_DONT_PLACE | WINDOW_TYPE_DIALOG)))
     {
         if (!position && is_transient && (c2 = clientGetTransient (c)))
diff --git a/src/settings.c b/src/settings.c
index 2bcdd9d50..33368de32 100644
--- a/src/settings.c
+++ b/src/settings.c
@@ -194,6 +194,10 @@ set_placement_mode (ScreenInfo *screen_info, const char *value)
     {
         screen_info->params->placement_mode = PLACE_MOUSE;
     }
+    else if (!g_ascii_strcasecmp ("none", value))
+    {
+        screen_info->params->placement_mode = PLACE_NONE;
+    }
     else
     {
         screen_info->params->placement_mode = PLACE_CENTER;
diff --git a/src/settings.h b/src/settings.h
index f20c6db46..7f95a42c1 100644
--- a/src/settings.h
+++ b/src/settings.h
@@ -160,7 +160,8 @@ enum
 enum
 {
     PLACE_MOUSE,
-    PLACE_CENTER
+    PLACE_CENTER,
+    PLACE_NONE
 };
 
 struct _Settings
